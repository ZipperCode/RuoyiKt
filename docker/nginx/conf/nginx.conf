worker_processes  1;

events {
    worker_connections  1024;
}

http {
    include /etc/nginx/mime.types;
    default_type  application/octet-stream;
    sendfile        on;
    underscores_in_headers on;
    keepalive_timeout  120s;
    # 限制body大小
    client_max_body_size 100m;
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;  # 日志

    server {
        listen       80;
        server_name  localhost;

        gzip on;
        gzip_min_length 1k;     # 设置允许压缩的页面最小字节数
        gzip_buffers 4 16k;     # 用来存储 gzip 的压缩结果
        gzip_http_version 1.1;  # 识别 HTTP 协议版本
        gzip_comp_level 2;      # 设置 gzip 的压缩比 1-9。1 压缩比最小但最快，而 9 相反
        gzip_types text/plain application/x-javascript text/css application/xml application/javascript; # 指定压缩类型
        gzip_proxied any;       # 无论后端服务器的 headers 头返回什么信息，都无条件启用压缩

        # 限制外网访问内网 actuator 相关路径
        location ~ ^(/[^/]*)?/actuator(/.*)?$ {
            return 403;
        }
        # 前端访问
        location / {
            root   /usr/share/nginx/html/admin;               # 修改后的路径
            try_files $uri $uri/ /index.html;  # 修改: 原配置可能导致循环重定向
            index  index.html index.htm;
        }
        # 配置代理
        location /prod-api/ {
            proxy_pass http://ry-server:8080/;         # 代理目标地址，docker中为容器名
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header REMOTE-HOST $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            # websocket参数
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }
}